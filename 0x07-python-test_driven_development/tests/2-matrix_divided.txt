>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test Case 1: Basic Division
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> div = 3
>>> matrix_divided(matrix, div)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test Case 2: Matrix with Mixed Integer and Float Values
>>> matrix = [[1, 2, 3.5], [4.3, 5, 6]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[0.5, 1.0, 1.75], [2.15, 2.5, 3.0]]

# Test Case 3: Matrix with Negative Values
>>> matrix = [[-1, -2, -3], [-4, -5, -6]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

# Test Case 4: Matrix with All Elements as Zeros
>>> matrix = [[0, 0, 0], [0, 0, 0]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

# Test Case 5: Matrix with a Single Row
>>> matrix = [[1, 2, 3]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[0.5, 1.0, 1.5]]

# Test Case 6: Matrix with a Single Column
>>> matrix = [[1], [2], [3]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[0.5], [1.0], [1.5]]

# Test Case 7: Matrix with Div as Zero (Expecting ZeroDivisionError)
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> div = 0
>>> try:
...     matrix_divided(matrix, div)
... except ZeroDivisionError as e:
...     assert str(e) == 'division by zero', f"Unexpected error message: {e}"
